Git Basics

Зачем нужен Git?
    Сохранение промежуточных версий кода 
    Параллельная работа нескольких человек 
    Каждая версия кода называется commit 
 

Работа через командную строку:
git  status
git add <file(s)>
git commit -m <message>
git log
 
 
Три состояния файла:
Изменен -> Готов к коммиту -> Закоммичен
 
 
git add
git add -p (частичный коммит)
git status
git rm (удаляет файл из гита и файловой системы)
git rm --cashed (удаляет файл из гита, но оставляет в файловой системе)
git mv (переименовывает файл)
 
 
 
git show (краткая версия git log, показывает изменения последнего коммита)
git diff <commit1> <commit2> (показывает изменения между двумя коммитами)
git diff <commit> (показывает изменения, которые были внесены в последнем коммите)
git diff <file> / git diff HEAD
git diff --name-only <params> (выводит список измененных файлов в этом коммите)


git checkout -- <file> (отменяет недавно сделанные незакоммиченные изменения в файле)
git commit --amend (позволяет изменить последний коммит)
git revert <commit> (позволяет отменить конкретный коммит)
git reset --hard (все изменения после указанного коммита исчезают навсегда)
git reset --soft (все изменения после указанного коммита отправляем в индекс)
git reset --mixed (все изменения после указанного коммита отправляет в unstaged)