Git Basics

Зачем нужен Git?
    Сохранение промежуточных версий кода 
    Параллельная работа нескольких человек 
    Каждая версия кода называется commit 
 

Работа через командную строку:
git  status
git add <file(s)>
git commit -m <message>
git log
 
 
Три состояния файла:
Изменен -> Готов к коммиту -> Закоммичен
 
 
git add
git add -p (частичный коммит)
git status
git rm (удаляет файл из гита и файловой системы)
git rm --cashed (удаляет файл из гита, но оставляет в файловой системе)
git mv (переименовывает файл)
 
 
 
git show (краткая версия git log, показывает изменения последнего коммита)
git diff <commit1> <commit2> (показывает изменения между двумя коммитами)
git diff <commit> (показывает изменения, которые были внесены в последнем коммите)
git diff <file> / git diff HEAD
git diff --name-only <params> (выводит список измененных файлов в этом коммите)


git checkout -- <file> (отменяет недавно сделанные незакоммиченные изменения в файле)
git commit --amend (позволяет изменить последний коммит)
git revert <commit> (позволяет отменить конкретный коммит)
git reset --hard (все изменения после указанного коммита исчезают навсегда)
git reset --soft (все изменения после указанного коммита отправляем в индекс)
git reset --mixed (все изменения после указанного коммита отправляет в unstaged)



                Репозитории и коллективная работа

git init (создает репозиторий в папке)
git clone (клоинурет удаленный репозиторий)
git push (отправляет локальные коммиты в удаленный репозиторий)
git pull (позволяет получить измененя из удаленного репозитория)


                Ветки - создание и управление

git checkout -b <name> / git checkout <name> (создание ветки / переключение между ветками)
git push -u origin <name> (отправление изменений в конкретный удаленный репозиторий на конкретной ветке)
git remote -v (выводит список удаленных репозиториев и их адресов)
git branch -m / git branch -d (переименование / удаление нужной нам ветки)
git fetch / git pull (получает изменения с репозитория отдельной ветки / сливает изменения с репозитория)
git diff master...origin/develop (позволяет посмотреть разницу между локальными ветками / между локальной и уделенной ветками)


                Слияние и разрешение конфликтов
git merge <branch> (позволяет слить ветки)
git merge --abort (отменяет последий автоматический мёрдж)